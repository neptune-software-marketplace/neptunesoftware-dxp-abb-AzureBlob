{
	"id": "78c3c464-466b-ed11-9f60-000d3aba46be",
	"createdAt": "2022-11-23T15:49:21.080Z",
	"createdBy": "carlos.pires@neptune-software.com",
	"globalScripts": [],
	"externalModules": [
		{
			"id": "F536BC1F-B72D-ED11-BD6E-E42AAC618FDD",
			"name": "@azure/storage-blob",
			"contextname": "azurestorageblob",
			"path": "/home/planet9/ext-disk/npm-serverscript/node_modules/@azure/storage-blob"
		}
	],
	"entitySets": [],
	"apis": [],
	"name": "List",
	"ver": "22.11.23.1557",
	"description": null,
	"content": [
		"==OBJECT STRING==",
		"complete({",
		"    listBlobs: listBlobs,",
		"});",
		"",
		"async function listBlobs(params) {",
		"    const blob = modules.azurestorageblob;",
		"    const url = `https://${params.account}.blob.core.windows.net/${params.container}/`",
		"",
		"    try {",
		"",
		"        if (params.account === undefined || params.account === null || params.account === \"\") throw \"Account is missing!\";",
		"        if (params.accountKey === undefined || params.accountKey === null || params.accountKey === \"\") throw \"Access Key is missing!\";",
		"        if (params.container === undefined || params.container === null || params.container === \"\") throw \"Container is missing!\";",
		"",
		"",
		"        const sharedKeyCredential = new blob.StorageSharedKeyCredential(params.account, params.accountKey);",
		"        const blobServiceClient = new blob.BlobServiceClient(`https://${params.account}.blob.core.windows.net`, sharedKeyCredential);",
		"        const containerClient = blobServiceClient.getContainerClient(params.container);",
		"",
		"        let entity = await containerClient.listBlobsFlat({ prefix: params.filter, includeMetadata: params.metadata });",
		"",
		"        let output = [];",
		"",
		"        for await (const blobInfo of entity) {",
		"",
		"            output.push({",
		"                \"fileName\": blobInfo.name,",
		"                \"url\": url + blobInfo.name,",
		"                \"metadata\": blobInfo.metadata,",
		"                \"DateTime\": blobInfo.properties.lastModified,",
		"                \"contentLength\": blobInfo.properties.contentLength",
		"            });",
		"        }",
		"",
		"        return output;",
		"    } catch (e) {",
		"        log.error(\"Azure Blob Upload: \" + e);",
		"        return \"Error\";",
		"    }",
		"",
		"}"
	],
	"useAsGlobalScript": true,
	"isTypescript": false,
	"transpiledContent": null,
	"lastRunSuccessful": false,
	"jsscriptGroup": "910f112a-466b-ed11-9f60-000d3aba46be",
	"package": "a83ed26f-446b-ed11-9f60-000d3aba46be"
}